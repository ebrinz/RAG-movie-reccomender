
services:

  db:
    container_name: db
    build:
      context: .
      dockerfile: src/db/Dockerfile
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: movie_recco
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  api:
    container_name: api
    build:
      context: .
      dockerfile: src/api/Dockerfile
      args:
        EMBEDDING_MODEL: ${EMBEDDING_MODEL}
        VECTOR_DIM: ${VECTOR_DIM}
        DATABASE_URL: ${DATABASE_URL}
    restart: always
    environment:
      - FLASK_ENV=development
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - VECTOR_DIM=${VECTOR_DIM}
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    ports:
      - "5000:5000"
    networks:
      - app_network
    depends_on:
      - db
    volumes:
      - ./src:/app/src
      - ~/.cache/huggingface:/root/.cache/huggingface

  llm:
    container_name: llm
    build:
      context: .
      dockerfile: src/llm/Dockerfile
    ports:
      - "11434:11434"
    networks:
      - app_network
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    command: "ollama serve"

  ui:
    container_name: ui
    build:
      context: .
      dockerfile: src/ui/Dockerfile
    restart: always
    volumes:
      - ./src/ui:/app
    ports:
      - "3000:3000"
    
    environment:
      - NODE_ENV=development

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  ollama_data: 
